-- SET @RENTSQTY = 0;

DELIMITER $$
CREATE TRIGGER RENTSCOUNTER BEFORE INSERT ON RENTS
FOR EACH ROW
BEGIN
	SET @RENTSQTY = @RENTSQTY + 1;
END $$
DELIMITER ;

SELECT @RENTSQTY;

INSERT INTO RENTS(BOOK_ID, READER_ID, RENT_DATE, RETURN_DATE)
     VALUES (2, 6, CURDATE() - 2, null);
     
INSERT INTO RENTS(BOOK_ID, READER_ID, RENT_DATE, RETURN_DATE)
     VALUES (5, 8, CURDATE() - 2, CURDATE() - 2);

INSERT INTO RENTS(BOOK_ID, READER_ID, RENT_DATE, RETURN_DATE)
     VALUES (5, 8, CURDATE() - 2, CURDATE() - 1);

INSERT INTO RENTS(BOOK_ID, READER_ID, RENT_DATE, RETURN_DATE)
     VALUES (5, 9, CURDATE() - 2, null);
     
COMMIT;

DROP TRIGGER RENTSCOUNTER;

-- Tabele audytowe

CREATE TABLE RENTS_AUD (
	EVENT_ID INT(11) NOT NULL AUTO_INCREMENT,
    EVENT_DATE DATETIME NOT NULL,
    EVENT_TYPE VARCHAR (10) DEFAULT NULL,
    RENT_ID INT(11) NOT NULL,
    OLD_BOOK_ID INT(11),
    NEW_BOOK_ID INT(11),
    OLD_READER_ID INT(11),
    NEW_READER_ID INT(11),
    OLD_RENT_DATE DATETIME,
    NEW_RENT_DATE DATETIME,
    OLD_RETURN_DATE DATETIME,
    NEW_RETURN_DATE DATETIME,
    PRIMARY KEY (`EVENT_ID`)
);

DELIMITER $$
CREATE TRIGGER RENTS_INSERT AFTER INSERT ON RENTS
FOR EACH ROW
BEGIN
	INSERT INTO RENTS_AUD (EVENT_DATE, EVENT_TYPE, RENT_ID, NEW_BOOK_ID, NEW_READER_ID, NEW_RENT_DATE, NEW_RETURN_DATE)
		VALUES (CURTIME(), "INSERT", NEW.RENT_ID, NEW.BOOK_ID, NEW.READER_ID, NEW.RENT_DATE, NEW.RETURN_DATE);
END $$
DELIMITER ;

INSERT INTO RENTS(BOOK_ID, READER_ID, RENT_DATE, RETURN_DATE)
     VALUES (1, 10, CURDATE() - 1, null);

DELIMITER $$     
CREATE TRIGGER RENTS_DELETE AFTER DELETE ON RENTS
FOR EACH ROW
BEGIN
	INSERT INTO RENTS_AUD (EVENT_DATE, EVENT_TYPE, RENT_ID)
		VALUES (CURTIME(), "DELETE", OLD.RENT_ID);
END $$
DELIMITER ;

DELETE FROM RENTS WHERE RENT_ID = 24;

DELIMITER $$
CREATE TRIGGER RENTS_UPDATE AFTER UPDATE ON RENTS
FOR EACH ROW
BEGIN
	INSERT INTO RENTS_AUD (EVENT_DATE, EVENT_TYPE, RENT_ID, NEW_BOOK_ID, NEW_READER_ID, NEW_RENT_DATE, NEW_RETURN_DATE, OLD_BOOK_ID, OLD_READER_ID, OLD_RENT_DATE, OLD_RETURN_DATE)
		VALUES (CURTIME(), "UPDATE", OLD.RENT_ID, NEW.BOOK_ID, NEW.READER_ID, NEW.RENT_DATE, NEW.RETURN_DATE, OLD.BOOK_ID, OLD_READER_ID, OLD.RENT_DATE, OLD.RETURN_DATE);
END $$
DELIMITER ;

UPDATE RENTS SET RETURN_DATE = CURDATE() WHERE RENT_ID = 21; 
COMMIT;